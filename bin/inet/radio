-- reads a music file and plays it
-- each line of the file should be
-- <instrument> <note> [time]
-- time is optional and in seconds

-- map note names to numbers
notes = {
  ["F#0"]=0, ["G0"]=1, ["G#0"]=2, ["A0"]=3, 
  ["A#0"]=4, ["B0"]=5, ["C1"]=6, ["C#1"]=7, ["D1"]=8,
  ["D#1"]=9, ["E1"]=10, ["F1"]=11, ["F#1"]=12,
  ["G1"]=13, ["G#1"]=14, ["A1"]=15, ["A#1"]=16,
  ["B1"]=17, ["C2"]=18, ["C#2"]=19, ["D2"]=20, 
  ["D#2"]=21, ["E2"]=22, ["F2"]=23, ["F#2"]=24
}    

-- read arguments
args = {...}
if #args ~= 1 then
  print("Usage: radio <song>")
  return
end

-- load song
local song = fs.open(args[1], "r")
if not song then
  error("Unable to read "..args[0])
  return
end

-- play song
for line in song.readLine do
  if line:len() ~= 0 and line:sub(1,1) ~= "#" then
    -- parse numbers in line
    local parser = line:gmatch("[0-9A-G#%.]+") -- number iterator
  
    -- parse numbers in line
    local parser = line:gmatch("[0-9A-G#%.]+") -- number iterator
    local instrument = tonumber(parser())
    local note = notes[parser()]
    local time = tonumber(parser())
   
    if not instrument or not note then
      print("Invalid line: "..line)
    else
      radio.broadcast.play(instrument, note)
    end
    
    if time then
      os.sleep(time)
    end
  end
end
